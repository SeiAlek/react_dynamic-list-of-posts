{"version":3,"sources":["helpers/debounce.ts","helpers/getData.tsx","components/Button/Button.tsx","components/Comments/CommentItem.tsx","components/Comments/CommentList.tsx","components/PostList/PostItem.tsx","components/PostList/PostList.tsx","components/Search/Search.tsx","App.tsx","index.tsx"],"names":["debounce","f","delay","timerId","clearTimeout","setTimeout","API_URL","getData","url","a","fetch","response","json","preparePosts","Promise","all","posts","users","comments","map","post","user","find","id","userId","filter","comment","postId","Button","text","className","handleClick","type","onClick","CommentItem","name","email","body","CommentList","key","PostItem","title","username","PostList","Search","state","searchQuery","debouncedSendQuery","setSearchQuery","props","handleInputChange","e","setState","target","value","this","placeholder","onChange","Component","App","isLoading","isLoaded","hasError","loadPosts","preparedPosts","query","trim","toLocaleLowerCase","replace","searchPosts","includes","searchedPosts","max","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7a51c66.chunk.js","sourcesContent":["export const debounce = (f: Function, delay: number) => {\n  let timerId: ReturnType<typeof setTimeout>;\n\n  const debounced = () => {\n    clearTimeout(timerId);\n    timerId = setTimeout(() => f, delay);\n  };\n\n  return debounced;\n};\n","import { Post, User, Comment } from '../components/Interface';\n\nconst API_URL = 'https://seialek.github.io/react_dynamic-list-of-posts/api';\n\nconst getData = async (url: string) => {\n  const response = await fetch(url);\n  const json = await response.json();\n\n  return json;\n};\n\nexport const preparePosts = async () => {\n  const [posts, users, comments] = await Promise.all([\n    getData(`${API_URL}/posts.json`),\n    getData(`${API_URL}/users.json`),\n    getData(`${API_URL}/comments.json`),\n  ]);\n\n  return posts.map((post: Post) => ({\n    ...post,\n    user: users.find((user: User) => user.id === post.userId),\n    comments: comments.filter((comment: Comment) => comment.postId === post.id),\n  }));\n};\n","import React from 'react';\n\ninterface Props {\n  text: string;\n  className: string;\n  handleClick: () => void;\n}\n\nexport const Button: React.FC<Props> = ({\n  text,\n  className,\n  handleClick,\n}) => (\n  <button type=\"button\" className={className} onClick={handleClick}>\n    {text}\n  </button>\n);\n","import React from 'react';\n\ninterface Props {\n  id: number;\n  postId: number;\n  name: string;\n  email: string;\n  body: string;\n}\n\nexport const CommentItem: React.FC<Props> = ({\n  id,\n  postId,\n  name,\n  email,\n  body,\n}) => (\n  <div className=\"box is-italic is-margin-vertical\" id={`${postId}-${id}`}>\n    <strong>{name}</strong>\n    {' '}\n    <small>{email}</small>\n    <p>\n      {body}\n    </p>\n  </div>\n);\n","import React from 'react';\nimport { Comment } from '../Interface';\nimport { CommentItem } from './CommentItem';\n\ninterface Props {\n  comments: Comment[];\n}\n\nexport const CommentList: React.FC<Props> = ({ comments }) => (\n  <ul>\n    {comments.map((comment) => (\n      <li key={comment.id}>\n        <CommentItem {...comment} />\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport { User, Comment } from '../Interface';\nimport { CommentList } from '../Comments';\n\ninterface Props {\n  id: number;\n  title: string;\n  body: string;\n  user: User;\n  comments: Comment[];\n}\n\nexport const PostItem: React.FC<Props> = ({\n  id,\n  title,\n  body,\n  user,\n  comments,\n}) => (\n  <article className=\"message is-primary\" id={`${id}`}>\n    <div className=\"message-header\">\n      <h1 className=\"title has-text-white is-capitalized is-4\">\n        {title}\n      </h1>\n    </div>\n    <div className=\"message-body\">\n      <h2 className=\"subtitle\">\n        {`Author: ${user.username}`}\n      </h2>\n      {body}\n      <CommentList comments={comments} />\n    </div>\n  </article>\n);\n","import React from 'react';\nimport { Post } from '../Interface';\nimport { PostItem } from './PostItem';\n\ninterface Props {\n  posts: Post[];\n}\n\nexport const PostList: React.FC<Props> = ({ posts }) => (\n  <div>\n    {posts.map((post) => (\n      <PostItem {...post} key={post.id} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport { debounce } from '../../helpers';\n\ntype State = {\n  searchQuery: string;\n};\n\ntype Props = {\n  setSearchQuery: (query: string) => void;\n};\n\nexport class Search extends Component<Props> {\n  state: State = {\n    searchQuery: '',\n  };\n\n  debouncedSendQuery = debounce(() => {\n    const { setSearchQuery } = this.props;\n    const { searchQuery } = this.state;\n\n    setSearchQuery(searchQuery);\n  }, 1000);\n\n  handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ searchQuery: e.target.value });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n\n    return (\n      <div className=\"field\">\n        <div className=\"control\">\n          <input\n            className=\"input is-primary\"\n            type=\"text\"\n            placeholder=\"Input text\"\n            value={searchQuery}\n            onChange={e => {\n              this.handleInputChange(e);\n              this.debouncedSendQuery();\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { preparePosts } from './helpers';\nimport { Post } from './components/Interface';\nimport { Button } from './components/Button';\nimport { PostList } from './components/PostList';\nimport { Search } from './components/Search';\n\ntype State = {\n  posts: Post[];\n  isLoading: boolean;\n  isLoaded: boolean;\n  hasError: boolean;\n  searchQuery: string;\n};\n\nclass App extends Component<{}, State> {\n  state: State = {\n    posts: [],\n    isLoading: false,\n    isLoaded: false,\n    hasError: false,\n    searchQuery: '',\n  };\n\n  loadPosts = async () => {\n    this.setState({\n      isLoading: true,\n      hasError: false,\n    });\n\n    try {\n      const preparedPosts = await preparePosts();\n\n      this.setState({\n        posts: preparedPosts,\n        isLoaded: true,\n      });\n    } catch {\n      this.setState({\n        hasError: true,\n      });\n    }\n\n    this.setState({ isLoading: false });\n  };\n\n  setSearchQuery = (query: string) => {\n    this.setState({\n      searchQuery: query\n        .trim()\n        .toLocaleLowerCase()\n        .replace(/\\s/g, ' '),\n    });\n  };\n\n  searchPosts = () => {\n    const { posts, searchQuery } = this.state;\n    const filteredPosts = posts.filter(post => {\n      const content = `${post.title} ${post.body}`\n        .toLocaleLowerCase()\n        .replace(/\\s/g, ' ');\n\n      return content.includes(searchQuery);\n    });\n\n    return filteredPosts;\n  };\n\n  render() {\n    const {\n      isLoading,\n      isLoaded,\n      hasError,\n    } = this.state;\n\n    const searchedPosts = this.searchPosts();\n\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title is-1\">Dynamic List of Posts</h1>\n          {!isLoading && !isLoaded && !hasError && (\n            <Button\n              text=\"Load Posts\"\n              className=\"button\"\n              handleClick={this.loadPosts}\n            />\n          )}\n          {isLoading && (\n            <progress className=\"progress is-primary\" max=\"100\">\n              Loading...\n            </progress>\n          )}\n          {hasError && (\n            <>\n              <div className=\"notification is-warning\">Oops! Something went wrong... :(</div>\n              <Button\n                text=\"Try Again\"\n                className=\"button\"\n                handleClick={this.loadPosts}\n              />\n            </>\n          )}\n          {isLoaded && (\n            <>\n              <Search setSearchQuery={this.setSearchQuery} />\n              <PostList posts={searchedPosts} />\n            </>\n          )}\n          {isLoaded && !searchedPosts.length && (\n            <div className=\"notification is-warning\">Posts not found....</div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}